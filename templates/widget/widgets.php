<?php/*@package sagctheme	========================		WIDGET CLASS	========================*/class sagc_Profile_Widget extends WP_Widget {	// setup the widget name, description, etc...	public function __construct() {		$widget_ops = array(			'classname' => 'sagc-profile-widget',			'description' => 'Custom sagc Profile Widget',		);		parent::__construct( 'sagc_profile', 'SAGC :: Profile', $widget_ops );	}	// back-end display of widget	public function form( $instance ) {		echo '<p><strong>No options for this Widget!</strong><br/>You can control the fields of this Widget from <a href="../admin/admin.php?page=alecaddd_sagc">This Page</a></p>';	}	//front-end display of widget	public function widget( $args, $instance ) {		$picture = esc_attr( get_option( 'profile_picture' ) );		$firstName = esc_attr( get_option( 'first_name' ) );		$lastName = esc_attr( get_option( 'last_name' ) );		$fullName = $firstName . ' ' . $lastName;		$description = esc_attr( get_option( 'user_description' ) );		$twitter_icon = esc_attr( get_option( 'twitter_handler' ) );		$facebook_icon = esc_attr( get_option( 'facebook_handler' ) );		$gplus_icon = esc_attr( get_option( 'gplus_handler' ) );		echo $args['before_widget'];		?>		<div class="text-center">			<div class="image-container">				<div id="profile-picture-preview" class="profile-picture" style="background-image: url(<?php print $picture; ?>);"></div>			</div>			<h1 class="sagc-username"><?php print $fullName; ?></h1>			<h2 class="sagc-description"><?php print $description; ?></h2>			<div class="icons-wrapper">				<?php if( !empty( $twitter_icon ) ): ?>					<a href="https://twitter.com/<?php echo $twitter_icon; ?>" target="_blank"><span class="sagc-icon-sidebar sagc-icon sagc-twitter"></span></a>				<?php endif;				if( !empty( $gplus_icon ) ): ?>					<a href="https://plus.google.com/u/0/+<?php echo $gplus_icon; ?>" target="_blank"><span class="sagc-icon-sidebar sagc-icon sagc-googleplus"></span></a>				<?php endif;				if( !empty( $facebook_icon ) ): ?>					<a href="https://facebook.com/<?php echo $facebook_icon; ?>" target="_blank"><span class="sagc-icon-sidebar sagc-icon sagc-facebook"></span></a>				<?php endif; ?>			</div>		</div>		<?php		echo $args['after_widget'];	}}add_action( 'widgets_init', function() {	register_widget( 'sagc_Profile_Widget' );} );/*	Edit default WordPress widgets*/function sagc_tag_cloud_font_change( $args ) {	$args['smallest'] = 8;	$args['largest'] = 8;	return $args;}add_filter( 'widget_tag_cloud_args', 'sagc_tag_cloud_font_change' );function sagc_list_categories_output_change( $links ) {	$links = str_replace('</a> (', '</a> <span>', $links);	$links = str_replace(')', '</span>', $links);	return $links;}add_filter( 'wp_list_categories', 'sagc_list_categories_output_change' );/*	Save Posts views*/function sagc_save_post_views( $postID ) {	$metaKey = 'sagc_post_views';	$views = get_post_meta( $postID, $metaKey, true );	$count = ( empty( $views ) ? 0 : $views );	$count++;	update_post_meta( $postID, $metaKey, $count );}remove_action( 'wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0 );/*	Popular Posts Widget*/class sagc_Popular_Posts_Widget extends WP_Widget {	//setup the widget name, description, etc...	public function __construct() {		$widget_ops = array(			'classname' => 'sagc-popular-posts-widget',			'description' => 'Popular Posts Widget',		);		parent::__construct( 'sagc_popular_posts', 'SAGC :: Popular Posts', $widget_ops );	}	// back-end display of widget	public function form( $instance ) {		$title = ( !empty( $instance[ 'title' ] ) ? $instance[ 'title' ] : 'Popular Posts' );		$tot = ( !empty( $instance[ 'tot' ] ) ? absint( $instance[ 'tot' ] ) : 4 );		$output = '<p>';		$output .= '<label for="' . esc_attr( $this->get_field_id( 'title' ) ) . '">Title:</label>';		$output .= '<input type="text" class="widefat" id="' . esc_attr( $this->get_field_id( 'title' ) ) . '" name="' . esc_attr( $this->get_field_name( 'title' ) ) . '" value="' . esc_attr( $title ) . '"';		$output .= '</p>';		$output .= '<p>';		$output .= '<label for="' . esc_attr( $this->get_field_id( 'tot' ) ) . '">Number of Posts:</label>';		$output .= '<input type="number" class="widefat" id="' . esc_attr( $this->get_field_id( 'tot' ) ) . '" name="' . esc_attr( $this->get_field_name( 'tot' ) ) . '" value="' . esc_attr( $tot ) . '"';		$output .= '</p>';		echo $output;	}	// update widget	public function update( $new_instance, $old_instance ) {		$instance = array();		$instance[ 'title' ] = ( !empty( $new_instance[ 'title' ] ) ? strip_tags( $new_instance[ 'title' ] ) : '' );		$instance[ 'tot' ] = ( !empty( $new_instance[ 'tot' ] ) ? absint( strip_tags( $new_instance[ 'tot' ] ) ) : 0 );		return $instance;	}	// front-end display of widget	public function widget( $args, $instance ) {		$tot = absint( $instance[ 'tot' ] );		$posts_args = array(			'post_type'			=> 'post',			'posts_per_page'	=> $tot,			'meta_key'			=> 'sagc_post_views',			'orderby'			=> 'meta_value_num',			'order'				=> 'DESC'		);		$posts_query = new WP_Query( $posts_args );		echo $args[ 'before_widget' ];		if( !empty( $instance[ 'title' ] ) ):			echo $args[ 'before_title' ] . apply_filters( 'widget_title', $instance[ 'title' ] ) . $args[ 'after_title' ];		endif;		if( $posts_query->have_posts() ):			//echo '<ul>';			while( $posts_query->have_posts() ): $posts_query->the_post();				echo '<div class="media">';				echo '<div class="media-left"><img class="media-object" src="' . get_template_directory_uri() . '/img/post-' . ( get_post_format() ? get_post_format() : 'standard') . '.png" alt="' . get_the_title() . '"/></div>';				echo '<div class="media-body">';				echo '<a href="' . get_the_permalink() . '" title="' . get_the_title() . '">' . get_the_title() . '</a>';				echo '<div class="row"><div class="col-xs-12">'. sagc_posted_footer( true ) .'</div></div>';				echo '</div>';				echo '</div>';			endwhile;			//echo '</ul>';		endif;		echo $args[ 'after_widget' ];	}}add_action( 'widgets_init', function() {	register_widget( 'sagc_Popular_Posts_Widget' );} );class sagc_recent_post extends WP_Widget{  function __construct()  {    $widget_opt = array(      'classname' => 'sagc_widget_recent_post',      'description' => esc_html__('Display post with thumbnail,date', 'sagc')    );    parent::__construct('sagc-recent-post', esc_html__('SAGC :: Thumbnail Posts', 'sagc'), $widget_opt);  }  function widget($args, $instance)  {    $cache = wp_cache_get('widget_recent_posts', 'widget');    if (!is_array($cache))      $cache = array();    if (!isset($args['widget_id']))      $args['widget_id'] = $this->id;    if (isset($cache[$args['widget_id']])) {      echo $cache[$args['widget_id']];      return;    }    ob_start();    extract($args);    global $wp_query;    $title = (!empty($instance['title'])) ? $instance['title'] : esc_html__('Recent Posts', 'sagc');    $title = apply_filters('widget_title', $title, $instance, $this->id_base);    $show_image = isset($instance['show_image']) ? $instance['show_image'] : false;    $show_date = isset($instance['show_date']) ? $instance['show_date'] : false;    $number = (!empty($instance['number'])) ? absint($instance['number']) : 5;    if (!$number)      $number = 10;    $category = "";    if (isset($instance['recent_cat'])) {      $category = $instance['recent_cat'];    }    $orderby = "";    if (isset($instance['orderby'])) {      $orderby = $instance['orderby'];    }    $order = "";    if (isset($instance['order'])) {      $order = $instance['order'];    }    $recent_args = array(      'post_type' => array('post'),      'post_status' => array('publish'),      'cat' => array($category),      'orderby' => $orderby,      'order' => $order,      'posts_per_page' => $number,      'no_found_rows' => true,      'ignore_sticky_posts' => true    );    $recentPosts = new WP_Query($recent_args); ?>    <div class="single-sitebar">      <div class="widget-title text-center">        <h3><?php if ($title) echo esc_html($title) ?></h3>      </div>    <?php if ($recentPosts->have_posts()): ?>    <?php while ($recentPosts->have_posts()) : $recentPosts->the_post();      ?>      <div class="wrap-sagc-widget">        <?php if ( $show_image ) : ?>          <?php the_post_thumbnail(array(117,117),array('class' => 'sidebar-img')); ?>        <?php endif ?>        <div class="widget-wrap">          <a href="<?php the_permalink(); ?>">            <h4><?php the_title(); ?></h4>            <span> <i class="fa fa-clock-o"></i> <?php echo get_the_time(  'j F  Y' ); ?> </span>          </a>        </div>      </div>      <?php endwhile;  wp_reset_postdata(); //while ?>    <?php endif //have posts ?>    </div>  <?php }  function update($new_instance, $old_instance)  {    $old_instance['title'] = strip_tags($new_instance['title']);    $old_instance['number'] = $new_instance['number'];    $old_instance['recent_cat'] = isset($new_instance['recent_cat']) ? $new_instance['recent_cat'] : "";    $old_instance['order'] = isset($new_instance['order']) ? $new_instance['order'] : "";    $old_instance['orderby'] = isset($new_instance['orderby']) ? $new_instance['orderby'] : "";    $old_instance['show_date'] = isset($new_instance['show_date']) ? (bool)$new_instance['show_date'] : false;    $old_instance['show_image'] = isset($new_instance['show_image']) ? (bool)$new_instance['show_image'] : false;    return $old_instance;  }  function form($instance)  {    $title = isset($instance['title']) ? esc_attr($instance['title']) : esc_html__('Recent Posts', 'sagc');    if (isset($instance['number'])) {      $np = $instance['number'];    } else {      $np = 5;    }    $select_cat = isset($instance['recent_cat']) ? $instance['recent_cat'] : "";    $order = isset($instance['order']) ? $instance['order'] : "";    $orderby = isset($instance['orderby']) ? $instance['orderby'] : "";    $show_date = isset($instance['show_date']) ? (bool)$instance['show_date'] : true;    $show_image = isset($instance['show_image']) ? (bool)$instance['show_image'] : true;    $get_all_cat = get_terms('category', array(      'hide_empty' => false,    ));    ?>    <p>      <label for="<?php echo esc_attr($this->get_field_id('title')); ?>"><?php esc_html_e('Title:', 'sagc'); ?></label>      <input class="widefat" id="<?php echo esc_attr($this->get_field_id('title')); ?>"             name="<?php echo esc_attr($this->get_field_name('title')); ?> type=" text"      value="<?php echo esc_attr($title); ?>" /></p>    <p>      <label for="<?php echo esc_attr($this->get_field_id('')); ?>" style="display: block">        <?php esc_attr_e('Select Category:', 'sagc'); ?>      </label>      <select name="<?php echo esc_attr($this->get_field_name('recent_cat')); ?>"              id="<?php echo esc_attr($this->get_field_id('recent_cat')); ?>" style="width: 100%;">        <option value="">All Category</option>        <?php foreach ($get_all_cat as $cat) { ?>          <option value="<?php echo $cat->term_id; ?>" <?php selected($select_cat, $cat->term_id); ?>>            <?php echo $cat->name; ?></option>        <?php } ?>      </select>    </p>    <p>      <label for="<?php echo esc_attr($this->get_field_id('number')); ?>"><?php _e('Number of Posts', 'sagc'); ?></label>      <input class="widefat" id="<?php echo esc_attr($this->get_field_id('number')); ?>"             name="<?php echo esc_attr($this->get_field_name('number')); ?>" type="text"             value="<?php echo esc_attr($np); ?>"/>    </p>    <p>      <label for="<?php echo $this->get_field_id('order'); ?>">        <?php _e('Order', 'sagc'); ?>      </label>      <select class="widefat" id="<?php echo $this->get_field_id('order'); ?>"              name="<?php echo $this->get_field_name('order'); ?>" style="width:100%;">        <option value="DESC" <?php selected($order, 'DESC'); ?>><?php _e('Descending', 'sagc') ?></option>        <option value="ASC" <?php selected($order, 'ASC'); ?>><?php _e('Ascending', 'sagc') ?></option>      </select>    </p>    <p>      <label for="<?php echo $this->get_field_id('orderby'); ?>">        <?php _e('Orderby', 'sagc'); ?>      </label>      <select class="widefat" id="<?php echo $this->get_field_id('orderby'); ?>"              name="<?php echo $this->get_field_name('orderby'); ?>" style="width:100%;">        <option value="ID" <?php selected($orderby, 'ID'); ?>><?php _e('ID', 'sagc') ?></option>        <option value="author" <?php selected($orderby, 'author'); ?>><?php _e('Author', 'sagc') ?></option>        <option value="title" <?php selected($orderby, 'title'); ?>><?php _e('Title', 'sagc') ?></option>        <option value="date" <?php selected($orderby, 'date'); ?>><?php _e('Date', 'sagc') ?></option>        <option value="modified" <?php selected($orderby, 'modified'); ?>><?php _e('Modified', 'sagc') ?></option>        <option value="rand" <?php selected($orderby, 'rand'); ?>><?php _e('Random', 'sagc') ?></option>        <option value="comment_count" <?php selected($orderby, 'comment_count'); ?>><?php _e('Comment Count', 'sagc') ?></option>        <option value="menu_order" <?php selected($orderby, 'menu_order'); ?>><?php _e('Menu Order', 'sagc') ?></option>      </select>    </p>    <p><input class="checkbox" type="checkbox" <?php checked($show_date); ?>              id="<?php echo esc_attr($this->get_field_id('show_date')); ?>"              name="<?php echo esc_attr($this->get_field_name('show_date')); ?>"/>      <label for="<?php echo esc_attr($this->get_field_id('show_date')); ?>"><?php esc_html_e('Display post date?', 'sagc'); ?></label>    </p>    <p><input class="checkbox" type="checkbox" <?php checked($show_image); ?>              id="<?php echo esc_attr($this->get_field_id('show_image')); ?>"              name="<?php echo esc_attr($this->get_field_name('show_image')); ?>"/>      <label for="<?php echo esc_attr($this->get_field_id('show_image')); ?>"><?php esc_html_e('Display post image?', 'sagc'); ?></label>    </p>    <?php  }}add_action( 'widgets_init', function() {  register_widget( 'sagc_recent_post' );} );